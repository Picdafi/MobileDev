Pembahasan
1) Asynchronous programming: pengertian, kelas Future dan Stream.
Asynchronous hasil eksekusi atau output tidak selalu berdasarkan urutan kode, tetapi berdasarkan waktu proses. Eksekusi dengan asynchronous tidak akan membloking atau menunggu suatu perintah sampai selesai. Daripada menunggu, asynchronous akan mengeksekusi perintah selanjutnya. 

cara kerja asynchronous adalah berdasarkan waktu proses. Jika ada salah satu eksekusi membutuhkan proses yang agak lama, maka sembari menunggu proses tersebut dart mengeksekusi perintah selanjutnya.

Teknik Asynchronous paling banyak digunakan mengelola komunikasi yang tidak mungkin sinkron atau harus menunggu seperti proses request ajax, operasi file, koneksi ke database, websocket, real time communication seperti pada aplikasi chating dan masih banyak lagi.

Future : ditutup, Muncul dengan beberapa nilai atau Muncul dengan kesalahan.
Stream : ini jalur transaksi data. Kita bisa membuka jalur data, bisa melihat data apa saja yang lewat, bisa melewatkan data, bisa menutup jalur data. 

Saat await dan fungsi async, eksekusi kode di dalam caller ditunda sementara operasi async dieksekusi.
Ketika operasi async selesai, nilai dari apa yang ditunggu terkandung dalam Future

2) Konkurensi: pengertian, penggunaan isolates (https://codingwithjoe.com/dart-fundamentals-isolates/)
Isolates adalah apa yang dijalankan oleh semua kode dart. Ini seperti sedikit ruang pada mesin dengan memori pribadi dan satu thread yang menjalankan loop Peristiwa.
Setiap isolates memiliki tumpukan memori dan kodenya sendiri. Isolat ini berkomunikasi satu sama lain dengan mengirimkan pesan bolak-balik melalui ports.
Setiap “Isolate” memiliki “Event Loop” dan Antriannya sendiri (MicroTask dan Event). Ini berarti bahwa kode berjalan di dalam Isolate, terlepas dari Isolate lain.


3) Dart platforms
- Dart Native : program perangkat seluler, dekstop, server dll. 
- Web Dart (JavaScript) : web, Dart Web juga menyertakan kompiler waktu pengembangan (dartdev) dan kompiler waktu produksi (dart2js) 


4) Command line tools


5) Pub untuk package manager

Pub adalah package manager untuk Dart. Fungsinya untuk menginstal package ke dalam proyek Dart. apabila mengembangkan aplikasi sisi web atau server menggunakan pub untuk mengunduh package.

Package adalah library yang berisi fungsi-fungsi, class, dan program Dart yang bisa digunakan ulang.

Pub menggunakan file pubspec.yaml untuk menentukan package yang akan digunakan pada proyek.

6) Effective Dart
- Konsisten 
- Singkat
dengan menggunakan dart tujuannya adalah menggunakan kode yang ekonomis(ringkas), tidak padat. Dart diciptakan 




Synchronous adalah yang paling umum dan mudah di mengerti. Setiap perintah di eksekusi satu persatu sesuai urutan kode yang anda tuliskan. 
console.log('Hello')
console.log('Javascript')
console.log('Coder')

/*
Output :
Hello!
Javascipt
Coder
*/
Output dari kode diatas dijamin akan sesuai urutan, karena setiap perintah harus menunggu perintah sebelumnya selesai. Proses seperti ini disebut ‘blocking’.


console.log('Hello');
setTimeout(() => { console.log('Javascript')},100) // tunda selama 100 miliseconds
console.log('Coder');

/* ----------
Output :
Hello!
Coder
Javascipt
------------*/
Pada baris ke 2 setTimeout digunakan untuk menunda eksekusi dalam satuan milisecond dalam hal ini untuk simulasi prosess async.


https://medium.com/mindorks/asynchronous-programming-in-dart-flutter-part-1-dde723332698 (contoh async + future)
